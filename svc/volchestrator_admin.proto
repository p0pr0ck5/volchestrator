syntax = "proto3";

import "google/protobuf/timestamp.proto";

option go_package = "github.com/p0pr0ck5/volchestrator/svc";

package volchestrator;

message Client {
  string client_id = 1;
  string lease_id = 2;
  enum Status {
    Alive = 0;
    Deleting = 1;
  }
  Status status = 3;
  google.protobuf.Timestamp registered = 4;
  google.protobuf.Timestamp last_seen = 5;
}

message GetClientRequest {
  string client_id = 1;
}

message GetClientResponse {
  Client client = 1;
}

message ListClientsRequest {}

message ListClientsResponse {
  repeated Client clients = 1;
}

message Volume {
  string volume_id = 1;
  string lease_id = 2;
  string region = 3;
  string tag = 4;
  enum Status {
    unused = 0;
    Available = 1;
    Unavailable = 2;
    Attaching = 3;
    Attached = 4;
    Detaching = 5;
    Deleting = 6;
  }
  Status status = 5;
}

message GetVolumeRequest {
  string volume_id = 1;
}

message GetVolumeResponse {
  Volume volume = 1;
}

message ListVolumesRequest {}

message ListVolumesReponse {
  repeated Volume volumes = 1;
}

message AddVolumeRequest {
  Volume volume = 1;
}

message AddVolumeResponse {}

message UpdateVolumeRequest {
  Volume volume = 1;
}

message UpdateVolumeResponse {}

message DeleteVolumeRequest {
  Volume volume = 1;
}

message DeleteVolumeResponse {}

message LeaseRequest {
  string lease_request_id = 1;
  string client_id = 2;
  string region = 3;
  string tag = 4;
  enum Status {
    unused = 0;
    Pending = 1;
    Fulfulling = 2;
    Fulfilled = 3;
    Deleting = 4;
  }
  Status status = 5;
}

message GetLeaseRequestRequest {
  string lease_request_id = 1;
}

message GetLeaseRequestResponse {
  LeaseRequest lease_request = 1;
}

message ListLeaseRequestsRequest {}

message ListLeaseRequestsResponse {
  repeated LeaseRequest lease_requests = 1;
}

service VolchestratorAdmin {
  rpc GetClient(GetClientRequest) returns (GetClientResponse) {}
  rpc ListClients(ListClientsRequest) returns (ListClientsResponse) {}

  rpc GetVolume(GetVolumeRequest) returns (GetVolumeResponse) {}
  rpc ListVolumes(ListVolumesRequest) returns (ListVolumesReponse) {}
  rpc AddVolume(AddVolumeRequest) returns (AddVolumeResponse) {}
  rpc UpdateVolume(UpdateVolumeRequest) returns (UpdateVolumeResponse) {}
  rpc DeleteVolume(DeleteVolumeRequest) returns (DeleteVolumeResponse) {}

  rpc GetLeaseRequest(GetLeaseRequestRequest) returns (GetLeaseRequestResponse) {}
  rpc ListLeaseRequests(ListLeaseRequestsRequest) returns (ListLeaseRequestsResponse) {}
}